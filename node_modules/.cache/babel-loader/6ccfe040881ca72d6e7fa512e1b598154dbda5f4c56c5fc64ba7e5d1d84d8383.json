{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgalan/Desktop/Calculator/calculator/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Numpad(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"numpad\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"AC\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(\"AC\"),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"divide\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(\"/\"),\n      children: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"multiply\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(\"*\"),\n      children: \"*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"seven\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(7),\n      children: \"7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"eight\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(8),\n      children: \"8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"nine\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(9),\n      children: \"9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"subtract\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(\"-\"),\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"four\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(4),\n      children: \"4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"five\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(5),\n      children: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"six\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(6),\n      children: \"6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"addition\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(\"+\"),\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"one\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(1),\n      children: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"two\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(2),\n      children: \"2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"three\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(3),\n      children: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"equals\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(\"=\"),\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"zero\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(0),\n      children: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"decimal\",\n      className: \"numpad__button\",\n      onClick: () => props.handleInput(\".\"),\n      children: \".\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 7\n  }, this);\n}\n_c = Numpad;\nfunction Display(props) {\n  /* function evaluateExpression() {\n    console.log(props.topNum)\n  } */\n\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"display\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display__input\",\n      children: props.topNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display__output\",\n      children: props.bottomNum\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Display;\nfunction Calculator() {\n  _s();\n  let [inputString, setInputString] = React.useState(\"\");\n  let [inputSymbols, setInputSymbols] = React.useState([]);\n  let [evaluatedExpression, setEvaluatedExpression] = React.useState(\"\");\n  function retrieveInput(symbol) {\n    if (symbol === \"=\") {\n      evaluateExpression(inputString);\n    } else if (symbol === \"AC\") {\n      setInputString(\"\");\n      setInputSymbols([]);\n      setEvaluatedExpression(\"0\");\n    } else if (symbol !== \"AC\") {\n      inputSymbols.push(symbol);\n      setInputString(inputSymbols.join(\"\"));\n      setEvaluatedExpression(inputString);\n    }\n\n    //console.log(inputString);\n  }\n\n  function evaluateExpression(expression) {\n    console.log(\"This works\");\n    //console.log(eval(expression));\n    setEvaluatedExpression(eval(expression));\n    console.log(evaluatedExpression);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    children: [/*#__PURE__*/_jsxDEV(Display, {\n      topNum: inputString,\n      bottomNum: evaluatedExpression\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Numpad, {\n      handleInput: retrieveInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n_s(Calculator, \"7Jh5maOI5mrm+ZQ+aWG2QADX3Vw=\");\n_c3 = Calculator;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Calculator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"credits\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Designed and Coded By Michael Galan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 9\n  }, this);\n}\n_c4 = App;\nexport default App;\n\n/* \nfunction TopNum(props){\n  return (\n      <div className=\"display__input\">{props.topNum}</div>\n  );\n}\n\nfunction BottomNum(props){\n  return (\n      <div className=\"display__output\">{props.bottomNum}</div>\n  );\n}\n\nlet topNum = \"\";\nlet bottomNum = 0;\n\nfunction Display(props){\n\n  console.log(props);\n\n  topNum = props.operationString;\n\n  if (props.outputNum === undefined) {\n    bottomNum = 0;\n  }\n  else {\n    \n    if (props.outputNum[1] === \"AC\") {\n      topNum = \"\";\n      bottomNum = 0; \n    }\n    else {\n      bottomNum = props.outputNum; \n    }\n    \n  }\n  \n\n\n  return (\n    <div className=\"display\">\n   \n    <TopNum topNum = {topNum}/>\n    <BottomNum bottomNum = {bottomNum}/>\n    \n    </div>\n  );\n}\n\nlet operationString = \"\";\n\nlet arrayOfKeystrokes = [];\n\nlet token = false; \n\nlet firstNum = 0; \n\nconsole.log(eval(\"1+1*2+6\"))\n\n\nfunction Calculator(){\n\n  const [displayNum, setDisplayNum] = React.useState()\n  const [operationStr, setOperationStr] = React.useState();\n\n  console.log(operationStr);\n\n  //This is the function that does the calculation and returns the output!\n\n  function handleCalc(num, operation) {\n    console.log(num);\n    console.log(operation);\n    try {\n\n      if (num[1] == \"=\") {\n        console.log(\"This shit fired\");\n        operation = operation.replace(\"=\", \"\")\n        console.log(operation);\n        //console.log(eval(operation));\n        setDisplayNum(eval(operation));\n\n        console.log(operation + \"=\" + eval(operation))\n        setOperationStr(operation + \"=\" + eval(operation));\n      }\n      \n    }\n    catch (error) {\n      console.log(\"undefined issue\");\n    }\n    \n\n  }\n\n  //This is the useEffect hook that handles the calculation!;\n\n  React.useEffect(() => {\n    handleCalc(displayNum, operationString);\n  }, [displayNum, operationString])\n\n  //This creates the operation String!\n\n  function operation (symbol) {\n\n    let arrayOfOperations = [\"/\", \"*\", \"-\", \"+\", \"=\"];\n\n    console.log(operationString.length);\n\n    //operationString[operationString.length]\n\n    console.log(operationString.includes(\"=\"))\n\n    if (operationString.includes(\"=\")) {\n      console.log(\"This fired\");\n      operationString = \"\";\n      operationString = operationString + symbol;\n      setOperationStr(operationString)\n    }\n    else {\n\n      if (arrayOfOperations.includes(operationString[operationString.length-1]) && arrayOfOperations.includes(symbol)) {\n\n        operationString = operationString.slice(0, operationString.length-1);\n        operationString = operationString + symbol;\n        setOperationStr(operationString);\n      }\n      else if (symbol != \"AC\") {\n        operationString = operationString + symbol;\n        setOperationStr(operationString);\n      }\n      else {\n        operationString = \"\";\n        setOperationStr(operationString);\n\n    }\n\n    }\n   \n  }\n\n  //This takes the input and returns the display number!\n\n  function getInput(symbol) {\n\n    if (symbol === \"AC\") {\n      //console.log(\"This fired\")\n      arrayOfKeystrokes=[];\n      let props = [arrayOfKeystrokes, \"AC\"]\n      setDisplayNum(props);\n    }\n    else if (symbol === \"/\") {\n      arrayOfKeystrokes = [];\n      let props = [arrayOfKeystrokes, \"/\"]\n      setDisplayNum(props);\n      \n    }\n    else if (symbol === \"*\") {\n      arrayOfKeystrokes = [];\n      let props = [arrayOfKeystrokes, \"X\"]\n      setDisplayNum(props);\n    }\n    else if (symbol === \"-\") {\n      arrayOfKeystrokes = [];\n      let props = [arrayOfKeystrokes, \"-\"]\n      setDisplayNum(props);\n    }\n    else if (symbol === \"+\") {\n      arrayOfKeystrokes = [];\n      let props = [arrayOfKeystrokes, \"+\"]\n      setDisplayNum(props);\n    }\n    else if (symbol === \"=\") {\n      arrayOfKeystrokes = [];\n      let props = [arrayOfKeystrokes, \"=\"]\n      setDisplayNum(props);\n    }\n    else if (Number.isInteger(symbol) === true) {\n      arrayOfKeystrokes.push(symbol)\n      let props = [arrayOfKeystrokes.join(''), \"\"];\n      setDisplayNum(props); \n    }\n    else if (symbol === \".\" ) {\n      console.log(\"Hello\");\n      console.log(operationStr);\n      arrayOfKeystrokes.push(\"0\");\n      arrayOfKeystrokes.push(symbol);\n      let props = [arrayOfKeystrokes.join(''), \"\"];\n      setDisplayNum(props);\n    }\n    else if (symbol === \".\") {\n      arrayOfKeystrokes.push(symbol)\n      let props = [arrayOfKeystrokes.join(''), \"\"];\n      setDisplayNum(props);\n    }\n    operation(symbol);\n\n      return (\n      <div className=\"calculator\">\n        <Display operationString = {operationStr} outputNum = {displayNum}/>\n        <Numpad handleInput = {getInput}/>\n      </div>\n    );\n  }\n  } */\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Numpad\");\n$RefreshReg$(_c2, \"Display\");\n$RefreshReg$(_c3, \"Calculator\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["logo","React","Numpad","props","console","log","handleInput","Display","topNum","bottomNum","Calculator","inputString","setInputString","useState","inputSymbols","setInputSymbols","evaluatedExpression","setEvaluatedExpression","retrieveInput","symbol","evaluateExpression","push","join","expression","eval","App"],"sources":["/Users/michaelgalan/Desktop/Calculator/calculator/src/App.js"],"sourcesContent":["import logo from './logo.svg'\nimport React from 'react';\nimport './App.css';\n\nfunction Numpad(props){\n\n    console.log(props);\n\n    return (\n      <div className=\"numpad\">\n  \n            <button id=\"AC\" className=\"numpad__button\" onClick = {() => props.handleInput(\"AC\")}>AC</button>\n            <button id=\"divide\" className=\"numpad__button\" onClick = {() => props.handleInput(\"/\")}>/</button>\n            <button id=\"multiply\" className=\"numpad__button\" onClick = {() => props.handleInput(\"*\")}>*</button>\n   \n\n\n            <button id=\"seven\" className=\"numpad__button\" onClick = {() => props.handleInput(7)}>7</button>\n            <button id=\"eight\" className=\"numpad__button\" onClick = {() => props.handleInput(8)}>8</button>\n            <button id=\"nine\" className=\"numpad__button\" onClick = {() => props.handleInput(9)} >9</button>\n            <button id=\"subtract\" className=\"numpad__button\" onClick = {() => props.handleInput(\"-\")}>-</button>\n      \n          \n\n            <button id=\"four\" className=\"numpad__button\" onClick = {() => props.handleInput(4)}>4</button>\n            <button id=\"five\" className=\"numpad__button\" onClick = {() => props.handleInput(5)}>5</button>\n            <button id=\"six\" className=\"numpad__button\" onClick = {() => props.handleInput(6)}>6</button>\n            <button id=\"addition\" className=\"numpad__button\" onClick = {() => props.handleInput(\"+\")}>+</button>\n\n \n          \n            <button id=\"one\" className=\"numpad__button\" onClick = {() => props.handleInput(1)}>1</button>\n            <button id=\"two\" className=\"numpad__button\" onClick = {() => props.handleInput(2)}>2</button>\n            <button id=\"three\" className=\"numpad__button\" onClick = {() => props.handleInput(3)}>3</button>\n            <button id=\"equals\" className=\"numpad__button\" onClick = {() => props.handleInput(\"=\")}>=</button>\n          \n  \n            <button id=\"zero\" className=\"numpad__button\" onClick = {() => props.handleInput(0)}>0</button>\n            <button id=\"decimal\" className=\"numpad__button\" onClick = {() => props.handleInput(\".\")}>.</button>\n       \n      </div>\n    );\n}\n\nfunction Display(props){\n\n  /* function evaluateExpression() {\n    console.log(props.topNum)\n  } */\n\n  console.log(props);\n\n  return (\n    <div className=\"display\">\n      <div className=\"display__input\">{props.topNum}</div>\n      <div className=\"display__output\">{props.bottomNum}</div>\n    </div>\n  )\n}\n\n\n\nfunction Calculator() {\n\n  let [inputString, setInputString] = React.useState(\"\");\n  let [inputSymbols, setInputSymbols] = React.useState([]);\n  let [evaluatedExpression, setEvaluatedExpression] = React.useState(\"\");\n\n  function retrieveInput(symbol) {\n   if (symbol === \"=\") {\n      evaluateExpression(inputString);\n    }\n    else if (symbol === \"AC\") {\n      setInputString(\"\");\n      setInputSymbols([]);\n      setEvaluatedExpression(\"0\");\n    }\n \n    else if (symbol !== \"AC\") {\n      inputSymbols.push(symbol);\n      setInputString(inputSymbols.join(\"\"));\n      setEvaluatedExpression(inputString)\n    } \n\n    //console.log(inputString);\n  }\n\n  function evaluateExpression(expression) \n  {\n    console.log(\"This works\");\n    //console.log(eval(expression));\n    setEvaluatedExpression(eval(expression))\n    console.log(evaluatedExpression);\n  }\n\n\n\n\n  return (\n    <div className=\"calculator\">\n      <Display topNum = {inputString} bottomNum = {evaluatedExpression}/>\n      <Numpad handleInput = {retrieveInput}/>\n    </div>\n  )\n}\n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n          <Calculator /> \n          <div id=\"credits\">\n            <p>Designed and Coded By Michael Galan</p>\n          </div>\n        </div>\n      \n    );\n  }\n\nexport default App;\n\n/* \nfunction TopNum(props){\n  return (\n      <div className=\"display__input\">{props.topNum}</div>\n  );\n}\n\nfunction BottomNum(props){\n  return (\n      <div className=\"display__output\">{props.bottomNum}</div>\n  );\n}\n\nlet topNum = \"\";\nlet bottomNum = 0;\n\nfunction Display(props){\n\n  console.log(props);\n\n  topNum = props.operationString;\n\n  if (props.outputNum === undefined) {\n    bottomNum = 0;\n  }\n  else {\n    \n    if (props.outputNum[1] === \"AC\") {\n      topNum = \"\";\n      bottomNum = 0; \n    }\n    else {\n      bottomNum = props.outputNum; \n    }\n    \n  }\n  \n\n\n  return (\n    <div className=\"display\">\n   \n    <TopNum topNum = {topNum}/>\n    <BottomNum bottomNum = {bottomNum}/>\n    \n    </div>\n  );\n}\n\nlet operationString = \"\";\n\nlet arrayOfKeystrokes = [];\n\nlet token = false; \n\nlet firstNum = 0; \n\nconsole.log(eval(\"1+1*2+6\"))\n\n\nfunction Calculator(){\n\n  const [displayNum, setDisplayNum] = React.useState()\n  const [operationStr, setOperationStr] = React.useState();\n\n  console.log(operationStr);\n\n  //This is the function that does the calculation and returns the output!\n\n  function handleCalc(num, operation) {\n    console.log(num);\n    console.log(operation);\n    try {\n\n      if (num[1] == \"=\") {\n        console.log(\"This shit fired\");\n        operation = operation.replace(\"=\", \"\")\n        console.log(operation);\n        //console.log(eval(operation));\n        setDisplayNum(eval(operation));\n\n        console.log(operation + \"=\" + eval(operation))\n        setOperationStr(operation + \"=\" + eval(operation));\n      }\n      \n    }\n    catch (error) {\n      console.log(\"undefined issue\");\n    }\n    \n\n  }\n\n  //This is the useEffect hook that handles the calculation!;\n\n  React.useEffect(() => {\n    handleCalc(displayNum, operationString);\n  }, [displayNum, operationString])\n\n  //This creates the operation String!\n\n  function operation (symbol) {\n\n    let arrayOfOperations = [\"/\", \"*\", \"-\", \"+\", \"=\"];\n\n    console.log(operationString.length);\n\n    //operationString[operationString.length]\n\n    console.log(operationString.includes(\"=\"))\n\n    if (operationString.includes(\"=\")) {\n      console.log(\"This fired\");\n      operationString = \"\";\n      operationString = operationString + symbol;\n      setOperationStr(operationString)\n    }\n    else {\n\n      if (arrayOfOperations.includes(operationString[operationString.length-1]) && arrayOfOperations.includes(symbol)) {\n\n        operationString = operationString.slice(0, operationString.length-1);\n        operationString = operationString + symbol;\n        setOperationStr(operationString);\n      }\n      else if (symbol != \"AC\") {\n        operationString = operationString + symbol;\n        setOperationStr(operationString);\n      }\n      else {\n        operationString = \"\";\n        setOperationStr(operationString);\n\n    }\n\n    }\n   \n  }\n\n  //This takes the input and returns the display number!\n\n  function getInput(symbol) {\n\n    if (symbol === \"AC\") {\n      //console.log(\"This fired\")\n      arrayOfKeystrokes=[];\n      let props = [arrayOfKeystrokes, \"AC\"]\n      setDisplayNum(props);\n    }\n    else if (symbol === \"/\") {\n      arrayOfKeystrokes = [];\n      let props = [arrayOfKeystrokes, \"/\"]\n      setDisplayNum(props);\n      \n    }\n    else if (symbol === \"*\") {\n      arrayOfKeystrokes = [];\n      let props = [arrayOfKeystrokes, \"X\"]\n      setDisplayNum(props);\n    }\n    else if (symbol === \"-\") {\n      arrayOfKeystrokes = [];\n      let props = [arrayOfKeystrokes, \"-\"]\n      setDisplayNum(props);\n    }\n    else if (symbol === \"+\") {\n      arrayOfKeystrokes = [];\n      let props = [arrayOfKeystrokes, \"+\"]\n      setDisplayNum(props);\n    }\n    else if (symbol === \"=\") {\n      arrayOfKeystrokes = [];\n      let props = [arrayOfKeystrokes, \"=\"]\n      setDisplayNum(props);\n    }\n    else if (Number.isInteger(symbol) === true) {\n      arrayOfKeystrokes.push(symbol)\n      let props = [arrayOfKeystrokes.join(''), \"\"];\n      setDisplayNum(props); \n    }\n    else if (symbol === \".\" ) {\n      console.log(\"Hello\");\n      console.log(operationStr);\n      arrayOfKeystrokes.push(\"0\");\n      arrayOfKeystrokes.push(symbol);\n      let props = [arrayOfKeystrokes.join(''), \"\"];\n      setDisplayNum(props);\n    }\n    else if (symbol === \".\") {\n      arrayOfKeystrokes.push(symbol)\n      let props = [arrayOfKeystrokes.join(''), \"\"];\n      setDisplayNum(props);\n    }\n    operation(symbol);\n\n      return (\n      <div className=\"calculator\">\n        <Display operationString = {operationStr} outputNum = {displayNum}/>\n        <Numpad handleInput = {getInput}/>\n      </div>\n    );\n  }\n  } */"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}